############## \u914D\u7F6E Servlet & Tomcat ################
# \u5B9A\u4E49port
server.port=8092

# \u5B9A\u4E49context-path
#server.servlet.context-path=/springCloud-base-client2

# \u5B9A\u4E49session-timeout(\u79D2)
#server.servlet.session.timeout=1800
# \u914D\u7F6ETomcat\u7F16\u7801\uFF0C\u9ED8\u8BA4UTF-8
#server.tomcat.uri-encoding=UTF-8

############## \u914D\u7F6E SSL ################
#server.port=8443
#server.ssl.key-alias=ssl
#server.ssl.key-store=classpath:cer/ssl/ssl.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-store-type=JKS

# logback
logging.config=classpath:logback/logback-dev.xml
log_home=D:\\logs
log_name=spring-boot
log_level=INFO

# eureka
# \u63D0\u9AD8\u65E5\u5FD7\u7B49\u7EA7
logging.level.com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver=WARN
# \u670D\u52A1\u540D\uFF0C\u5728\u6CE8\u518C\u65F6\u5019\u4F7F\u7528
spring.application.name=springCloud-base-client
# \u914D\u7F6E\u670D\u52A1\u5668\u5730\u5740
eureka.server.instance.hostname=localhost
eureka.server.client.port=8761
eureka.client.service-url.defaultZone=http://${eureka.server.instance.hostname}:${eureka.server.client.port}/eureka/
# \u5173\u6389\u81EA\u6211\u4FDD\u62A4\u673A\u5236 (\u5B98\u65B9\u5EFA\u8BAE\u4E0D\u8981\u66F4\u6539\u670D\u52A1\u7EED\u7EA6\u7684\u95F4\u9694\u65F6\u95F4)
# \u6BCF\u95F4\u96945s\uFF0C\u5411\u670D\u52A1\u7AEF\u53D1\u9001\u4E00\u6B21\u5FC3\u8DF3\uFF0C\u8BC1\u660E\u81EA\u5DF1\u4F9D\u7136"\u5B58\u6D3B"
#eureka.instance.lease-renewal-interval-in-seconds=5
# \u544A\u8BC9\u670D\u52A1\u7AEF\uFF0C\u5982\u679C\u621115s\u4E4B\u5185\u6CA1\u6709\u7ED9\u4F60\u53D1\u5FC3\u8DF3\uFF0C\u5C31\u4EE3\u8868\u6211\u201C\u6B7B\u201D\u4E86\uFF0C\u5C06\u6211\u8E22\u51FA\u6389
#eureka.instance.lease-expiration-duration-in-seconds=15

# JNDI
#spring.datasource.jndi-name=java:comp/env/jdbc/TkPayDB8

# datasource-hikari
#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@10.137.146.8:1521:tkorasol
#spring.datasource.username=tkpay
#spring.datasource.password=tkpay
#spring.datasource.type=org.apache.commons.dbcp2.BasicDataSource
#spring.datasource.dbcp2.initial-size=5
#spring.datasource.dbcp2.max-total=50
#spring.datasource.dbcp2.max-idle=10
#spring.datasource.dbcp2.min-idle=5
#spring.datasource.dbcp2.max-wait-millis=600000
#spring.datasource.dbcp2.remove-abandoned-on-borrow=true
#spring.datasource.dbcp2.remove-abandoned-timeout=300
#spring.datasource.dbcp2.min-evictable-idle-time-millis=18000
#spring.datasource.dbcp2.num-tests-per-eviction-run=3
#spring.datasource.dbcp2.test-on-borrow=true
#spring.datasource.dbcp2.test-while-idle=true
#spring.datasource.dbcp2.test-on-return=true
#spring.datasource.dbcp2.validation-query=select 1 from dual

# mybatis
# \u6620\u5C04\u6587\u4EF6\u6240\u5728\u8DEF\u5F84
#mybatis.mapper-locations=classpath:mapper/*.xml
# pojo\u7C7B\u6240\u5728\u5305\u8DEF\u5F84
#mybatis.type-aliases-package=com.example.demo.domain

# datasource-druid (self-define)
spring.jta.atomikos.datasource.druid.self.max-pool-size=20
spring.jta.atomikos.datasource.druid.self.min-pool-size=20
spring.jta.atomikos.datasource.druid.self.unique-resource-name=dataSource_druid
spring.jta.atomikos.datasource.druid.self.xa-data-source-class-name=com.alibaba.druid.pool.xa.DruidXADataSource
spring.jta.atomikos.datasource.druid.self.xa-properties.driverClassName=com.mysql.jdbc.Driver
spring.jta.atomikos.datasource.druid.self.xa-properties.url=jdbc:mysql://192.168.11.164:3306/demo
spring.jta.atomikos.datasource.druid.self.xa-properties.username=root
spring.jta.atomikos.datasource.druid.self.xa-properties.password=root
spring.jta.atomikos.datasource.druid.self.xa-properties.initialSize=20
spring.jta.atomikos.datasource.druid.self.xa-properties.maxActive=20
spring.jta.atomikos.datasource.druid.self.xa-properties.minIdle=20
spring.jta.atomikos.datasource.druid.self.xa-properties.maxWait=60000
spring.jta.atomikos.datasource.druid.self.xa-properties.timeBetweenEvictionRunsMillis=60000
spring.jta.atomikos.datasource.druid.self.xa-properties.minEvictableIdleTimeMillis=300000
spring.jta.atomikos.datasource.druid.self.xa-properties.testWhileIdle=true
spring.jta.atomikos.datasource.druid.self.xa-properties.testOnBorrow=false
spring.jta.atomikos.datasource.druid.self.xa-properties.testOnReturn=false
spring.jta.atomikos.datasource.druid.self.xa-properties.poolPreparedStatements=true
spring.jta.atomikos.datasource.druid.self.xa-properties.maxPoolPreparedStatementPerConnectionSize=20

# datasource-druid2 (self-define)
spring.jta.atomikos.datasource.druid2.self.max-pool-size=20
spring.jta.atomikos.datasource.druid2.self.min-pool-size=20
spring.jta.atomikos.datasource.druid2.self.unique-resource-name=dataSource_druid2
spring.jta.atomikos.datasource.druid2.self.xa-data-source-class-name=com.alibaba.druid.pool.xa.DruidXADataSource
spring.jta.atomikos.datasource.druid2.self.xa-properties.driverClassName=com.mysql.jdbc.Driver
spring.jta.atomikos.datasource.druid2.self.xa-properties.url=jdbc:mysql://192.168.11.164:3306/demo
spring.jta.atomikos.datasource.druid2.self.xa-properties.username=root
spring.jta.atomikos.datasource.druid2.self.xa-properties.password=root
spring.jta.atomikos.datasource.druid2.self.xa-properties.initialSize=20
spring.jta.atomikos.datasource.druid2.self.xa-properties.maxActive=20
spring.jta.atomikos.datasource.druid2.self.xa-properties.minIdle=20
spring.jta.atomikos.datasource.druid2.self.xa-properties.maxWait=60000
spring.jta.atomikos.datasource.druid2.self.xa-properties.timeBetweenEvictionRunsMillis=60000
spring.jta.atomikos.datasource.druid2.self.xa-properties.minEvictableIdleTimeMillis=300000
spring.jta.atomikos.datasource.druid2.self.xa-properties.testWhileIdle=true
spring.jta.atomikos.datasource.druid2.self.xa-properties.testOnBorrow=false
spring.jta.atomikos.datasource.druid2.self.xa-properties.testOnReturn=false
spring.jta.atomikos.datasource.druid2.self.xa-properties.poolPreparedStatements=true
spring.jta.atomikos.datasource.druid2.self.xa-properties.maxPoolPreparedStatementPerConnectionSize=20

# datasource-hikariCP (self-define)
spring.datasource.hikari.self.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.hikari.self.url=jdbc:mysql://192.168.11.164:3306/demo
spring.datasource.hikari.self.username=root
spring.datasource.hikari.self.password=root
spring.datasource.hikari.self.max-active=20
spring.datasource.hikari.self.min-idle=20
spring.datasource.hikari.self.max-wait-millis=30000
spring.datasource.hikari.self.cache-prepStmts=true
spring.datasource.hikari.self.prepStmt-cache-size=256
spring.datasource.hikari.self.prepStmt-cacheSql-limit=2048
spring.datasource.hikari.self.rewrite-batched-statements=true

# redis
spring.redis.database=0
spring.redis.host=127.0.0.1
spring.redis.port=6379
spring.redis.password=
spring.redis.timeout=0
spring.redis.jedis.pool.max-active=1000
spring.redis.jedis.pool.max-wait=-1
spring.redis.jedis.pool.max-idle=20
spring.redis.jedis.pool.min-idle=5

# rabbitmq
spring.rabbitmq.virtual-host=/
spring.rabbitmq.host=127.0.0.1
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
# \u624B\u52A8ack
#spring.rabbitmq.listener.simple.acknowledge-mode=manual
# self-define rabbit params
rabbitmq.exchange.uniteExchange=topic.uniteExchange
rabbitmq.queue.uniteQueue=topic.uniteQueue
rabbitmq.queue.uniteKey=topic.uniteKey

# es
es.prop.app=springboot

# self-define params
first.name=aj
person.home=D:/apache-tomcat-8.5.23/webapps